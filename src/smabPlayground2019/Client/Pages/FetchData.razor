@page "/fetchdata"
@using smabPlayground2019.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
<AuthorizeView>
	<Authorized>
		<p><em>Loading...</em></p>
	</Authorized>
	<NotAuthorized>
		<p><em>Not allowed to check the weather!</em></p>
	</NotAuthorized>
</AuthorizeView>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

	[CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

	WeatherForecast[] forecasts;

	protected override async Task OnInitializedAsync()
	{
		var authState = await authenticationStateTask;
		var user = authState.User;

		if (user.Identity.IsAuthenticated)
		{
			try
				{
					forecasts = await Http.GetJsonAsync<WeatherForecast[]>("WeatherForecast");
				}
				catch (HttpRequestException ex)
				{
					Console.WriteLine($"Exception retrieving data from WeatherForecast service: {ex.Message}");
				}
			}
		}

}
